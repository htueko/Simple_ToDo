plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "org.jetbrains.dokka"
    id "androidx.navigation.safeargs.kotlin"
    id "kotlin-parcelize"
}

apply from: '../dependencies.gradle'

android {
    defaultConfig {
        applicationId "com.htueko.simpletodo"
        versionCode versions.versionCode
        versionName versions.versionName

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

tasks.dokkaHtml.configure {
    dokkaSourceSets {
        named("main") {
            // don't link to android sdk
            noAndroidSdkLink.set(false)
            // hide the deprecated
            skipDeprecated.set(true)
            // show private properties
            includeNonPublic.set(true)
            // Suppress all inherited members that were not overridden in a given class.
            suppressInheritedMembers.set(true)
        }
    }
    outputDirectory.set(file("documentation/html"))
}

dependencies {

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
    implementation "androidx.core:core-ktx:$versions.coreKtx"

    // support
    implementation "com.google.android.material:material:$versions.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayoutVersion"
    implementation "androidx.appcompat:appcompat:$versions.appCompatVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"

    // network
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    implementation "com.google.code.gson:gson:$versions.gsonVersion"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // room database
    implementation "androidx.room:room-runtime:$versions.roomVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"

    // data store
    implementation "androidx.datastore:datastore-preferences:$versions.dataStoreVersion"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycleVersion"

    // work manager (kotlin + coroutine)
    implementation "androidx.work:work-runtime-ktx:$versions.workManagerVersion"

    // navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigationVersion"

    // transition
    implementation "androidx.transition:transition-ktx:$versions.transitionVersion"

    // paging
    implementation "androidx.paging:paging-runtime-ktx:$versions.pagingVersion"

    // glide
    implementation "com.github.bumptech.glide:glide:$versions.glideVersion"

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltCoreVersion"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltCoreVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltCoreVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$versions.hiltCoreVersion"

    // logging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"
    implementation "com.orhanobut:logger:$versions.orhanobutVersion"

    // unit test
    testImplementation "junit:junit:$versions.junitVersion"
    testImplementation "androidx.test:core:$versions.androidxTest"
    testImplementation "com.google.truth:truth:$versions.truthVersion"
    testImplementation  "org.mockito:mockito-core:$versions.mockitoVersion"
    testImplementation  "org.mockito.kotlin:mockito-kotlin:$versions.mockitoKotlinVersion"

    // instrumentation test
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCoreVersion"
    androidTestImplementation "com.google.truth:truth:$versions.truthVersion"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidxTestJunit"
    androidTestImplementation "com.android.support.test:runner:$versions.androidTestRunner"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltCoreVersion"
    androidTestImplementation "androidx.room:room-testing:$versions.roomVersion"
    androidTestImplementation "androidx.work:work-testing:$versions.workManagerVersion"

}
