// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.diffplug.spotless"

buildscript {
    apply from: './dependencies.gradle'
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven{
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://maven.google.com"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$versions.gradleBuildTool"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$versions.hiltCoreVersion"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$versions.spotlessGradle"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigationVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$versions.dokkaVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versions.dependencyUpdate"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven{
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://maven.google.com"
        }
    }
}

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty('android')){
            apply plugin: "com.github.ben-manes.versions"
            apply plugin: "org.jetbrains.dokka"
            android {
                compileSdkVersion versions.compileSdk
                buildToolsVersion versions.buildToolVersion

                defaultConfig {
                    minSdkVersion versions.minSdk
                    targetSdkVersion versions.compileSdk
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                kotlinOptions {
                    jvmTarget = '1.8'
                }

                buildFeatures {
                    viewBinding true
                }

                lintOptions {
                    abortOnError false
                }

                testOptions {
                    unitTests {
                        includeAndroidResources = true
                        returnDefaultValues = true
                    }
                }

            }
        }
    }
}

tasks.named("dependencyUpdates").configure {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { ver -> version.toUpperCase().contains(ver) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }
    checkForGradleUpdate = true
    outputFormatter = "html"
    outputDir = "build/DependencyUpdates"
    reportfileName = "dependency_update_report"
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        // define the steps to apply to those files
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
    kotlin {
        target "**/*.kt"
        ktlint("0.39.0").userData(['indent_size': '4', 'continuation_indent_size': '4'])
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}
